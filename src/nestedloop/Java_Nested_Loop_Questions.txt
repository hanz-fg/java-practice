### Question 1: Print a Multiplication Table

Write a function to print a multiplication table up to `n x n`.

**Function Signature:**
```java
public void printMultiplicationTable(int n)
```

**Input:**
- A single integer `n` (1 ≤ n ≤ 20).

**Output:**
- Print the multiplication table up to `n x n`.

**Example:**
Input: `n = 3`  
Output:
```
1 2 3
2 4 6
3 6 9
```

---

### Question 2: Pyramid Pattern

Write a function to print a pyramid pattern of `*` with `n` rows.

**Function Signature:**
```java
public void printPyramid(int n)
```

**Input:**
- A single integer `n` (1 ≤ n ≤ 50).

**Output:**
- Print a pyramid pattern with `n` rows.

**Example:**
Input: `n = 3`  
Output:
```
  *
 ***
*****
```

---

### Question 3: Spiral Matrix

Write a function to generate an `n x n` spiral matrix.

**Function Signature:**
```java
public int[][] generateSpiralMatrix(int n)
```

**Input:**
- A single integer `n` (1 ≤ n ≤ 20).

**Output:**
- Return an `n x n` matrix filled in a spiral order.

**Example:**
Input: `n = 3`  
Output:
```
[
 [1, 2, 3],
 [8, 9, 4],
 [7, 6, 5]
]
```

---

### Question 4: Diamond Pattern

Write a function to print a diamond pattern with `2n-1` rows.

**Function Signature:**
```java
public void printDiamond(int n)
```

**Input:**
- A single integer `n` (1 ≤ n ≤ 50).

**Output:**
- Print a diamond pattern with `2n-1` rows.

**Example:**
Input: `n = 3`  
Output:
```
  *
 ***
*****
 ***
  *
```

---

### Question 5: Pascal's Triangle

Write a function to generate Pascal's Triangle with `n` rows.

**Function Signature:**
```java
public List<List<Integer>> generatePascalTriangle(int n)
```

**Input:**
- A single integer `n` (1 ≤ n ≤ 20).

**Output:**
- Return Pascal's Triangle as a list of lists.

**Example:**
Input: `n = 5`  
Output:
```
[
 [1],
 [1, 1],
 [1, 2, 1],
 [1, 3, 3, 1],
 [1, 4, 6, 4, 1]
]
```

---

### Question 6: Matrix Transpose

Write a function to compute the transpose of a given matrix.

**Function Signature:**
```java
public int[][] transposeMatrix(int[][] matrix)
```

**Input:**
- A 2D array `matrix` (1 ≤ matrix.length, matrix[0].length ≤ 100).

**Output:**
- Return the transpose of the input matrix.

**Example:**
Input: `matrix = [[1, 2, 3], [4, 5, 6]]`  
Output:
```
[
 [1, 4],
 [2, 5],
 [3, 6]
]
```

---

### Question 7: Hollow Square Pattern

Write a function to print a hollow square pattern of `*` with `n x n` dimensions.

**Function Signature:**
```java
public void printHollowSquare(int n)
```

**Input:**
- A single integer `n` (1 ≤ n ≤ 50).

**Output:**
- Print a hollow square pattern.

**Example:**
Input: `n = 5`  
Output:
```
*****
*   *
*   *
*   *
*****
```

---

### Question 8: Zigzag Pattern

Write a function to print a zigzag pattern with `n` rows and `m` columns.

**Function Signature:**
```java
public void printZigzagPattern(int n, int m)
```

**Input:**
- Two integers `n` (1 ≤ n ≤ 50) and `m` (1 ≤ m ≤ 50).

**Output:**
- Print a zigzag pattern.

**Example:**
Input: `n = 3, m = 7`  
Output:
```
*     *
 *   *
  * *
   *
```

---

### Question 9: Diagonal Sum of Matrix

Write a function to compute the sum of the diagonals of a square matrix.

**Function Signature:**
```java
public int diagonalSum(int[][] matrix)
```

**Input:**
- A 2D array `matrix` (1 ≤ matrix.length ≤ 100).

**Output:**
- Return the sum of the primary and secondary diagonals.

**Example:**
Input: `matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]`  
Output: `30`  
Explanation: Primary diagonal = 1+5+9, Secondary diagonal = 3+5+7.

---

### Question 10: Character Rectangle

Write a function to print a rectangle of characters of `n x m` dimensions using a given character `ch`.

**Function Signature:**
```java
public void printCharacterRectangle(int n, int m, char ch)
```

**Input:**
- Two integers `n` (1 ≤ n ≤ 50), `m` (1 ≤ m ≤ 50), and a character `ch`.

**Output:**
- Print a rectangle filled with the given character.

**Example:**
Input: `n = 3, m = 5, ch = '#'`  
Output:
```
#####
#####
#####
```
